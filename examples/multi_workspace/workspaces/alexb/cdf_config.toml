ff.provider = "local"

runtime.log_format = "[{levelname:<5}]|{process}|{name}|{message}"
runtime.log_level = "INFO"

[extract]

[normalize]

[load]

[transform]
model_defaults.dialect = "duckdb"

[[spec.pipelines]]
entrypoint = ".dota2:dota2_stats"
name = "dota2"
description = "Dota2 data from the OpenDota API and repository"
tags = ["games", "dota2"]
metrics."*" = [
  { entrypoint = "cdf.builtin.metrics:count", name = "count" },
]

[[spec.pipelines]]
entrypoint = ".cities:us_zip_codes"
name = "zip_codes"
description = "US zip codes"
tags = ["geography", "us"]
metrics.us_cities = [
  { entrypoint = ".cities:longest_name" },
  { entrypoint = ".cities:min_latitude" },
  { entrypoint = ".cities:max_latitude" },
  { entrypoint = ".cities:min_longitude" },
  { entrypoint = ".cities:max_longitude" },
  { entrypoint = "cdf.builtin.metrics:count" },
  { entrypoint = "cdf.builtin.metrics:avg_value", name = "avg_lat", input.key = "latitude" },
  { entrypoint = "cdf.builtin.metrics:avg_value", name = "avg_lon", input.key = "longitude" },
  # The cardinality of the city name is high, which makes this expensive
  # { entrypoint = "cdf.builtin.metrics:mode_value", name = "mode_city", input.key = "city" },
  { entrypoint = "cdf.builtin.metrics:mode_value", name = "mode_state", input.key = "state" },
]
filters.us_cities = [
  { entrypoint = "cdf.builtin.filters:not_empty", input.key = "latitude" },
  { entrypoint = "cdf.builtin.filters:not_empty", input.key = "longitude" },
  { entrypoint = ".cities:not_alaska" },
  { entrypoint = ".cities:not_hawaii" },
]
[[spec.pipelines]]
name = "hub"
version = 2
entrypoint = ".taps:meltano_hub_repo"
metrics.singer_taps = [
  # relative import in user code
  { entrypoint = ".simple:count" },
  # absolute import to cdf builtin
  { entrypoint = "cdf.builtin.metrics:count", name = "count_native" },
]
# glob patterns supported
metrics."*_t?ps" = [
  { entrypoint = ".simple:count", name = "count_pattern" },
]

[[spec.sinks]]
entrypoint = ".main:local"
environment = "dev"

[[spec.scripts]]
entrypoint = ".introspect:config"

[hackernews]
keywords = ["python"]
start_date = "{{ yesterday() }}"
end_date = "{{ today() }}"
daily_load = true


